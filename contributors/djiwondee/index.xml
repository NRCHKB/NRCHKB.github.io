<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>djiwondee on</title><link>https://nrchkb.github.io/contributors/djiwondee/</link><description>Recent content in djiwondee on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sat, 17 Apr 2021 18:50:12 +0000</lastBuildDate><atom:link href="https://nrchkb.github.io/contributors/djiwondee/index.xml" rel="self" type="application/rss+xml"/><item><title>Air Quality Sensor</title><link>https://nrchkb.github.io/wiki/service/air-quality-sensor/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/air-quality-sensor/</guid><description>To have a real Air Quality Sensor appear in the Home.app showing a Particulate Levels for 2.5 and 10 microns as well as an Air Quality Index based on the US EPA Scale, you can setup a Node-red flow to provide air characteristics value in HomeKit.
Example These simple examples are meant to be copied into your Node-RED system and adapted to your setup.
Please note: Different from other HomeKit services (e.</description></item><item><title>Carbon Dioxide Sensor</title><link>https://nrchkb.github.io/wiki/service/carbon-dioxide-sensor/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/carbon-dioxide-sensor/</guid><description>Example These examples are meant to be copied into your Node-RED system and adapted to your setup.
Please note: Different from other HomeKit services (e.g. temperature sensor) the Home.app is not showing the carbon dioxide level on the device icon. To view the current value you have to open the preferences of the device in the Home.app. This works as designed by Apple and can&amp;rsquo;t be changed with characteristics properties.</description></item><item><title>Occupancy Sensor</title><link>https://nrchkb.github.io/wiki/service/occupancy-sensor/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/occupancy-sensor/</guid><description>Example These examples are meant to be copied into your Node-RED system and adapted to your setup.
Simple Presence Sensor This example is a very simple occupancy sensor without any other functionality:
It de-/activates only the Occupancy sensor in the Home.app and set the StatusActive to true anytime: Here is the sample code:
[{&amp;#34;id&amp;#34;:&amp;#34;491167d6.3b9688&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;change&amp;#34;,&amp;#34;z&amp;#34;:&amp;#34;1ac5f8da.58656f&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;Set payload to HkMsg for presence&amp;#34;,&amp;#34;rules&amp;#34;:[{&amp;#34;t&amp;#34;:&amp;#34;move&amp;#34;,&amp;#34;p&amp;#34;:&amp;#34;payload&amp;#34;,&amp;#34;pt&amp;#34;:&amp;#34;msg&amp;#34;,&amp;#34;to&amp;#34;:&amp;#34;payload.OccupancyDetected&amp;#34;,&amp;#34;tot&amp;#34;:&amp;#34;msg&amp;#34;},{&amp;#34;t&amp;#34;:&amp;#34;set&amp;#34;,&amp;#34;p&amp;#34;:&amp;#34;payload.StatusActive&amp;#34;,&amp;#34;pt&amp;#34;:&amp;#34;msg&amp;#34;,&amp;#34;to&amp;#34;:&amp;#34;true&amp;#34;,&amp;#34;tot&amp;#34;:&amp;#34;bool&amp;#34;}],&amp;#34;action&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;property&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;from&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;to&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;reg&amp;#34;:false,&amp;#34;x&amp;#34;:1440,&amp;#34;y&amp;#34;:360,&amp;#34;wires&amp;#34;:[[&amp;#34;7712393a.469f98&amp;#34;]]},{&amp;#34;id&amp;#34;:&amp;#34;7712393a.469f98&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;homekit-service&amp;#34;,&amp;#34;z&amp;#34;:&amp;#34;1ac5f8da.58656f&amp;#34;,&amp;#34;isParent&amp;#34;:true,&amp;#34;bridge&amp;#34;:&amp;#34;890aedc6.d0b418&amp;#34;,&amp;#34;parentService&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;RBRx@Home&amp;#34;,&amp;#34;serviceName&amp;#34;:&amp;#34;OccupancySensor&amp;#34;,&amp;#34;topic&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;filter&amp;#34;:false,&amp;#34;manufacturer&amp;#34;:&amp;#34;Default Manufacturer&amp;#34;,&amp;#34;model&amp;#34;:&amp;#34;Default Model&amp;#34;,&amp;#34;serialNo&amp;#34;:&amp;#34;Default Serial Number&amp;#34;,&amp;#34;characteristicProperties&amp;#34;:&amp;#34;{\n \&amp;#34;OccupancyDetected\&amp;#34; : 0,\n \&amp;#34;StatusActive\&amp;#34; : false\n}&amp;#34;,&amp;#34;x&amp;#34;:1760,&amp;#34;y&amp;#34;:360,&amp;#34;wires&amp;#34;:[[]]},{&amp;#34;id&amp;#34;:&amp;#34;14d9e017.35bd28&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;inject&amp;#34;,&amp;#34;z&amp;#34;:&amp;#34;1ac5f8da.58656f&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;1&amp;#34;,&amp;#34;topic&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;payload&amp;#34;:&amp;#34;1&amp;#34;,&amp;#34;payloadType&amp;#34;:&amp;#34;num&amp;#34;,&amp;#34;repeat&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;crontab&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;once&amp;#34;:false,&amp;#34;onceDelay&amp;#34;:0.1,&amp;#34;x&amp;#34;:1230,&amp;#34;y&amp;#34;:320,&amp;#34;wires&amp;#34;:[[&amp;#34;491167d6.3b9688&amp;#34;]]},{&amp;#34;id&amp;#34;:&amp;#34;56f0d08b.2afce8&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;inject&amp;#34;,&amp;#34;z&amp;#34;:&amp;#34;1ac5f8da.58656f&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;0&amp;#34;,&amp;#34;topic&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;payload&amp;#34;:&amp;#34;0&amp;#34;,&amp;#34;payloadType&amp;#34;:&amp;#34;num&amp;#34;,&amp;#34;repeat&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;crontab&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;once&amp;#34;:false,&amp;#34;onceDelay&amp;#34;:0.1,&amp;#34;x&amp;#34;:1230,&amp;#34;y&amp;#34;:400,&amp;#34;wires&amp;#34;:[[&amp;#34;491167d6.3b9688&amp;#34;]]},{&amp;#34;id&amp;#34;:&amp;#34;890aedc6.d0b418&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;homekit-bridge&amp;#34;,&amp;#34;z&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;bridgeName&amp;#34;:&amp;#34;Node-Red-HAP-Bridge-02&amp;#34;,&amp;#34;pinCode&amp;#34;:&amp;#34;222-22-222&amp;#34;,&amp;#34;port&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;allowInsecureRequest&amp;#34;:false,&amp;#34;manufacturer&amp;#34;:&amp;#34;Default Manufacturer&amp;#34;,&amp;#34;model&amp;#34;:&amp;#34;Default Model&amp;#34;,&amp;#34;serialNo&amp;#34;:&amp;#34;Default Serial Number&amp;#34;}] The Author is using a more comprehensive flow for a use case that is also a simple presence detection of a device.</description></item><item><title>Stateless Programmable Switch</title><link>https://nrchkb.github.io/wiki/service/stateless-programmable-switch/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/stateless-programmable-switch/</guid><description>Examples These examples are meant to be copied into your Node-RED system and adapted to your setup.
Single Button This example is a single button with 3 press options: &amp;ldquo;Single Press&amp;rdquo;, &amp;ldquo;Double Press&amp;rdquo;, or &amp;ldquo;Long Press&amp;rdquo;. Each of these can be set in the Home.app to set a scene. Note the scene settings for these buttons is done from within the button settings in the Home.app rather than the automation screen.</description></item><item><title>Window</title><link>https://nrchkb.github.io/wiki/service/window/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/window/</guid><description>This service describes a motorized window to be appeared in the Home.app showing a status and whether the windows are moving its position based on an injected payload.
Example Simple Window Contact Sensor The following simple setup is to demonstrate core characteristics and its representation in the Home.app:
These examples are meant to be copied into your Node-RED system and adapted to your setup.
[{&amp;#34;id&amp;#34;:&amp;#34;3d4e49d.f6615b6&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;debug&amp;#34;,&amp;#34;z&amp;#34;:&amp;#34;9507c98c.4f4f9&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;active&amp;#34;:true,&amp;#34;tosidebar&amp;#34;:true,&amp;#34;console&amp;#34;:false,&amp;#34;tostatus&amp;#34;:false,&amp;#34;complete&amp;#34;:&amp;#34;false&amp;#34;,&amp;#34;x&amp;#34;:930,&amp;#34;y&amp;#34;:480,&amp;#34;wires&amp;#34;:[]},{&amp;#34;id&amp;#34;:&amp;#34;c4ea5eb2.8ea768&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;homekit-service&amp;#34;,&amp;#34;z&amp;#34;:&amp;#34;9507c98c.4f4f9&amp;#34;,&amp;#34;isParent&amp;#34;:true,&amp;#34;bridge&amp;#34;:&amp;#34;90fc07e3.c93f68&amp;#34;,&amp;#34;parentService&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;Terrace Door&amp;#34;,&amp;#34;serviceName&amp;#34;:&amp;#34;Window&amp;#34;,&amp;#34;topic&amp;#34;:&amp;#34;&amp;#34;,&amp;#34;filter&amp;#34;:false,&amp;#34;manufacturer&amp;#34;:&amp;#34;Default Manufacturer&amp;#34;,&amp;#34;model&amp;#34;:&amp;#34;Default Model&amp;#34;,&amp;#34;serialNo&amp;#34;:&amp;#34;Default Serial Number&amp;#34;,&amp;#34;characteristicProperties&amp;#34;:&amp;#34;{\n \&amp;#34;CurrentPosition\&amp;#34; :\n {\n \&amp;#34;minValue\&amp;#34;:0,\n \&amp;#34;maxValue\&amp;#34;:100\n },\n \&amp;#34;TargetPosition\&amp;#34; :\n {\n \&amp;#34;minValue\&amp;#34;:0,\n \&amp;#34;maxValue\&amp;#34;:100\n },\n \&amp;#34;PositionState\&amp;#34; :\n {\n \&amp;#34;validValues\&amp;#34;: [0,1,2]\n }\n}&amp;#34;,&amp;#34;x&amp;#34;:730,&amp;#34;y&amp;#34;:480,&amp;#34;wires&amp;#34;:[[&amp;#34;3d4e49d.</description></item></channel></rss>