<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>djiwondee on</title><link>https://nrchkb.github.io/contributors/djiwondee/</link><description>Recent content in djiwondee on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 17 Apr 2021 18:50:12 +0000</lastBuildDate><atom:link href="https://nrchkb.github.io/contributors/djiwondee/index.xml" rel="self" type="application/rss+xml"/><item><title>Characteristics</title><link>https://nrchkb.github.io/wiki/introduction/characteristics/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/introduction/characteristics/</guid><description>Characteristics are the values sent to the service item. They are generally true/false or number values. All services have at least one required characteristic. For example the switch has only the required characteristic of On.
Characteristic Properties The HomeKit service node has a section called &amp;ldquo;Characteristic Properties&amp;rdquo;. This section is used to define limits or initialize which characteristics you may send to your specific item.
The characteristic properties do not set any value in the item, instead they tell HomeKit that the item will be using that characteristic and define limits on the valid values.</description></item><item><title>Air Quality Sensor</title><link>https://nrchkb.github.io/wiki/service/air-quality-sensor/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/air-quality-sensor/</guid><description>To have a real Air Quality Sensor appear in the Home.app showing a Particulate Levels for 2.5 and 10 microns as well as an Air Quality Index based on the US EPA Scale, you can setup a Node-red flow to provide air characteristics value in HomeKit.
Example These simple examples are meant to be copied into your Node-RED system and adapted to your setup.
Please note: Different from other HomeKit services (e.</description></item><item><title>Carbon Dioxide Sensor</title><link>https://nrchkb.github.io/wiki/service/carbon-dioxide-sensor/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/carbon-dioxide-sensor/</guid><description>Example These examples are meant to be copied into your Node-RED system and adapted to your setup.
Please note: Different from other HomeKit services (e.g. temperature sensor) the Home.app is not showing the carbon dioxide level on the device icon. To view the current value you have to open the preferences of the device in the Home.app. This works as designed by Apple and can&amp;rsquo;t be changed with characteristics properties.</description></item><item><title>Light Bulb</title><link>https://nrchkb.github.io/wiki/service/lightbulb/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/lightbulb/</guid><description>Examples These examples are meant to be copied into your Node-RED system and adapted to your setup.
On/Off Light This is the simplest example of a light bulb item. The input nodes are &amp;ldquo;On&amp;rdquo; and &amp;ldquo;Off&amp;rdquo;. The debug node will return values when the switch is turned on or off via the Home app on an Apple device.
Copyable Node-RED flow:
[{&amp;quot;id&amp;quot;:&amp;quot;ed2d8340.e1d5d8&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;homekit-service&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;7b43483c.39305&amp;quot;,&amp;quot;bridge&amp;quot;:&amp;quot;d334490b.40dac&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Example Bulb OnOff&amp;quot;,&amp;quot;serviceName&amp;quot;:&amp;quot;Lightbulb&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;manufacturer&amp;quot;:&amp;quot;Default Manufacturer&amp;quot;,&amp;quot;model&amp;quot;:&amp;quot;Default Model&amp;quot;,&amp;quot;serialNo&amp;quot;:&amp;quot;Default Serial Number&amp;quot;,&amp;quot;characteristicProperties&amp;quot;:&amp;quot;{}&amp;quot;,&amp;quot;x&amp;quot;:380,&amp;quot;y&amp;quot;:160,&amp;quot;wires&amp;quot;:[[&amp;quot;5844674e.178708&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;5844674e.178708&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;debug&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;7b43483c.39305&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;HomeKit Out&amp;quot;,&amp;quot;active&amp;quot;:true,&amp;quot;tosidebar&amp;quot;:true,&amp;quot;console&amp;quot;:false,&amp;quot;tostatus&amp;quot;:false,&amp;quot;complete&amp;quot;:&amp;quot;payload&amp;quot;,&amp;quot;x&amp;quot;:590,&amp;quot;y&amp;quot;:160,&amp;quot;wires&amp;quot;:[]},{&amp;quot;id&amp;quot;:&amp;quot;8db975bc.c2e9d&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;inject&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;7b43483c.39305&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;On&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;payload&amp;quot;:&amp;quot;{\&amp;quot;On\&amp;quot;:true}&amp;quot;,&amp;quot;payloadType&amp;quot;:&amp;quot;json&amp;quot;,&amp;quot;repeat&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;crontab&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;once&amp;quot;:false,&amp;quot;onceDelay&amp;quot;:0.1,&amp;quot;x&amp;quot;:130,&amp;quot;y&amp;quot;:120,&amp;quot;wires&amp;quot;:[[&amp;quot;ed2d8340.e1d5d8&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;629771.da7c409&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;inject&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;7b43483c.39305&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Off&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;payload&amp;quot;:&amp;quot;{\&amp;quot;On\&amp;quot;:false}&amp;quot;,&amp;quot;payloadType&amp;quot;:&amp;quot;json&amp;quot;,&amp;quot;repeat&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;crontab&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;once&amp;quot;:false,&amp;quot;onceDelay&amp;quot;:0.1,&amp;quot;x&amp;quot;:130,&amp;quot;y&amp;quot;:180,&amp;quot;wires&amp;quot;:[[&amp;quot;ed2d8340.e1d5d8&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;d334490b.40dac&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;homekit-bridge&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;bridgeName&amp;quot;:&amp;quot;Example Bridge&amp;quot;,&amp;quot;pinCode&amp;quot;:&amp;quot;111-11-111&amp;quot;,&amp;quot;port&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;allowInsecureRequest&amp;quot;:false,&amp;quot;manufacturer&amp;quot;:&amp;quot;Default Manufacturer&amp;quot;,&amp;quot;model&amp;quot;:&amp;quot;Default Model&amp;quot;,&amp;quot;serialNo&amp;quot;:&amp;quot;Default Serial Number&amp;quot;}] Dimmable Light This is an example of a dimmable light bulb item.</description></item><item><title>Occupancy Sensor</title><link>https://nrchkb.github.io/wiki/service/occupancy-sensor/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/occupancy-sensor/</guid><description>Example These examples are meant to be copied into your Node-RED system and adapted to your setup.
Simple Presence Sensor This example is a very simple occupancy sensor without any other functionality:
It de-/activates only the Occupancy sensor in the Home.app and set the StatusActive to true anytime: Here is the sample code:
[{&amp;quot;id&amp;quot;:&amp;quot;491167d6.3b9688&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;change&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;1ac5f8da.58656f&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Set payload to HkMsg for presence&amp;quot;,&amp;quot;rules&amp;quot;:[{&amp;quot;t&amp;quot;:&amp;quot;move&amp;quot;,&amp;quot;p&amp;quot;:&amp;quot;payload&amp;quot;,&amp;quot;pt&amp;quot;:&amp;quot;msg&amp;quot;,&amp;quot;to&amp;quot;:&amp;quot;payload.OccupancyDetected&amp;quot;,&amp;quot;tot&amp;quot;:&amp;quot;msg&amp;quot;},{&amp;quot;t&amp;quot;:&amp;quot;set&amp;quot;,&amp;quot;p&amp;quot;:&amp;quot;payload.StatusActive&amp;quot;,&amp;quot;pt&amp;quot;:&amp;quot;msg&amp;quot;,&amp;quot;to&amp;quot;:&amp;quot;true&amp;quot;,&amp;quot;tot&amp;quot;:&amp;quot;bool&amp;quot;}],&amp;quot;action&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;property&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;from&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;to&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;reg&amp;quot;:false,&amp;quot;x&amp;quot;:1440,&amp;quot;y&amp;quot;:360,&amp;quot;wires&amp;quot;:[[&amp;quot;7712393a.469f98&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;7712393a.469f98&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;homekit-service&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;1ac5f8da.58656f&amp;quot;,&amp;quot;isParent&amp;quot;:true,&amp;quot;bridge&amp;quot;:&amp;quot;890aedc6.d0b418&amp;quot;,&amp;quot;parentService&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;RBRx@Home&amp;quot;,&amp;quot;serviceName&amp;quot;:&amp;quot;OccupancySensor&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;filter&amp;quot;:false,&amp;quot;manufacturer&amp;quot;:&amp;quot;Default Manufacturer&amp;quot;,&amp;quot;model&amp;quot;:&amp;quot;Default Model&amp;quot;,&amp;quot;serialNo&amp;quot;:&amp;quot;Default Serial Number&amp;quot;,&amp;quot;characteristicProperties&amp;quot;:&amp;quot;{\n \&amp;quot;OccupancyDetected\&amp;quot; : 0,\n \&amp;quot;StatusActive\&amp;quot; : false\n}&amp;quot;,&amp;quot;x&amp;quot;:1760,&amp;quot;y&amp;quot;:360,&amp;quot;wires&amp;quot;:[[]]},{&amp;quot;id&amp;quot;:&amp;quot;14d9e017.35bd28&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;inject&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;1ac5f8da.58656f&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;payload&amp;quot;:&amp;quot;1&amp;quot;,&amp;quot;payloadType&amp;quot;:&amp;quot;num&amp;quot;,&amp;quot;repeat&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;crontab&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;once&amp;quot;:false,&amp;quot;onceDelay&amp;quot;:0.1,&amp;quot;x&amp;quot;:1230,&amp;quot;y&amp;quot;:320,&amp;quot;wires&amp;quot;:[[&amp;quot;491167d6.3b9688&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;56f0d08b.2afce8&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;inject&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;1ac5f8da.58656f&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;payload&amp;quot;:&amp;quot;0&amp;quot;,&amp;quot;payloadType&amp;quot;:&amp;quot;num&amp;quot;,&amp;quot;repeat&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;crontab&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;once&amp;quot;:false,&amp;quot;onceDelay&amp;quot;:0.1,&amp;quot;x&amp;quot;:1230,&amp;quot;y&amp;quot;:400,&amp;quot;wires&amp;quot;:[[&amp;quot;491167d6.3b9688&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;890aedc6.d0b418&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;homekit-bridge&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;bridgeName&amp;quot;:&amp;quot;Node-Red-HAP-Bridge-02&amp;quot;,&amp;quot;pinCode&amp;quot;:&amp;quot;222-22-222&amp;quot;,&amp;quot;port&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;allowInsecureRequest&amp;quot;:false,&amp;quot;manufacturer&amp;quot;:&amp;quot;Default Manufacturer&amp;quot;,&amp;quot;model&amp;quot;:&amp;quot;Default Model&amp;quot;,&amp;quot;serialNo&amp;quot;:&amp;quot;Default Serial Number&amp;quot;}] The Author is using a more comprehensive flow for a use case that is also a simple presence detection of a device.</description></item><item><title>Stateless Programmable Switch</title><link>https://nrchkb.github.io/wiki/service/stateless-programmable-switch/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/stateless-programmable-switch/</guid><description>Examples These examples are meant to be copied into your Node-RED system and adapted to your setup.
Single Button This example is a single button with 3 press options: &amp;ldquo;Single Press&amp;rdquo;, &amp;ldquo;Double Press&amp;rdquo;, or &amp;ldquo;Long Press&amp;rdquo;. Each of these can be set in the Home.app to set a scene. Note the scene settings for these buttons is done from within the button settings in the Home.app rather than the automation screen.</description></item><item><title>Temperature Sensor</title><link>https://nrchkb.github.io/wiki/service/temperature-sensor/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/temperature-sensor/</guid><description>Example Simple Temperature Sensor This is a simple example to be copied into your Node-RED system and to be adapted to your setup.
Copyable Node-RED flow:
[{&amp;quot;id&amp;quot;:&amp;quot;551d04cf.db904c&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;change&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;755d7c8e.995f8c&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Set playoad to HkMsg Temperature&amp;quot;,&amp;quot;rules&amp;quot;:[{&amp;quot;t&amp;quot;:&amp;quot;move&amp;quot;,&amp;quot;p&amp;quot;:&amp;quot;payload&amp;quot;,&amp;quot;pt&amp;quot;:&amp;quot;msg&amp;quot;,&amp;quot;to&amp;quot;:&amp;quot;payload.CurrentTemperature&amp;quot;,&amp;quot;tot&amp;quot;:&amp;quot;msg&amp;quot;},{&amp;quot;t&amp;quot;:&amp;quot;set&amp;quot;,&amp;quot;p&amp;quot;:&amp;quot;payload.StatusActive&amp;quot;,&amp;quot;pt&amp;quot;:&amp;quot;msg&amp;quot;,&amp;quot;to&amp;quot;:&amp;quot;true&amp;quot;,&amp;quot;tot&amp;quot;:&amp;quot;bool&amp;quot;}],&amp;quot;action&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;property&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;from&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;to&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;reg&amp;quot;:false,&amp;quot;x&amp;quot;:680,&amp;quot;y&amp;quot;:460,&amp;quot;wires&amp;quot;:[[&amp;quot;1d25e931.f81077&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;1d25e931.f81077&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;homekit-service&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;755d7c8e.995f8c&amp;quot;,&amp;quot;bridge&amp;quot;:&amp;quot;e933973b.f891d&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Temperature Sensor&amp;quot;,&amp;quot;serviceName&amp;quot;:&amp;quot;TemperatureSensor&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;manufacturer&amp;quot;:&amp;quot;Default Manufacturer&amp;quot;,&amp;quot;model&amp;quot;:&amp;quot;Default Model&amp;quot;,&amp;quot;serialNo&amp;quot;:&amp;quot;Default Serial Number&amp;quot;,&amp;quot;characteristicProperties&amp;quot;:&amp;quot;{\n \&amp;quot;CurrentTemperature\&amp;quot; : 0,\n \&amp;quot;StatusActive\&amp;quot; : true\n}&amp;quot;,&amp;quot;x&amp;quot;:940,&amp;quot;y&amp;quot;:460,&amp;quot;wires&amp;quot;:[[&amp;quot;ad845a09.a164e&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;575eb49e.792834&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;comment&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;755d7c8e.995f8c&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Set Payload according to HAP specification&amp;quot;,&amp;quot;info&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;x&amp;quot;:710,&amp;quot;y&amp;quot;:400,&amp;quot;wires&amp;quot;:[]},{&amp;quot;id&amp;quot;:&amp;quot;b8b0c8ca.23abd8&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;comment&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;755d7c8e.995f8c&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Simulate Temperature Level&amp;quot;,&amp;quot;info&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;x&amp;quot;:220,&amp;quot;y&amp;quot;:400,&amp;quot;wires&amp;quot;:[]},{&amp;quot;id&amp;quot;:&amp;quot;8aa8b3f6.dfbc68&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;inject&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;755d7c8e.995f8c&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Repeate every 10 sec&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;payload&amp;quot;:&amp;quot;true&amp;quot;,&amp;quot;payloadType&amp;quot;:&amp;quot;bool&amp;quot;,&amp;quot;repeat&amp;quot;:&amp;quot;10&amp;quot;,&amp;quot;crontab&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;once&amp;quot;:false,&amp;quot;onceDelay&amp;quot;:0.1,&amp;quot;x&amp;quot;:200,&amp;quot;y&amp;quot;:460,&amp;quot;wires&amp;quot;:[[&amp;quot;6d31fe18.2648c8&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;6d31fe18.2648c8&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;random&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;755d7c8e.995f8c&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Random Temperature&amp;quot;,&amp;quot;low&amp;quot;:&amp;quot;-50&amp;quot;,&amp;quot;high&amp;quot;:&amp;quot;50&amp;quot;,&amp;quot;inte&amp;quot;:&amp;quot;false&amp;quot;,&amp;quot;property&amp;quot;:&amp;quot;payload&amp;quot;,&amp;quot;x&amp;quot;:420,&amp;quot;y&amp;quot;:460,&amp;quot;wires&amp;quot;:[[&amp;quot;551d04cf.db904c&amp;quot;]]},{&amp;quot;id&amp;quot;:&amp;quot;e933973b.f891d&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;homekit-bridge&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;bridgeName&amp;quot;:&amp;quot;Node-Red-HAP-Bridge-01&amp;quot;,&amp;quot;pinCode&amp;quot;:&amp;quot;111-11-111&amp;quot;,&amp;quot;port&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;allowInsecureRequest&amp;quot;:false,&amp;quot;manufacturer&amp;quot;:&amp;quot;Default Manufacturer&amp;quot;,&amp;quot;model&amp;quot;:&amp;quot;Default Model&amp;quot;,&amp;quot;serialNo&amp;quot;:&amp;quot;Default Serial Number&amp;quot;}] The example above is only showing the temperature value. The Home.app shows rounded values in the sensor icons with a precision of 0.</description></item><item><title>Window</title><link>https://nrchkb.github.io/wiki/service/window/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/window/</guid><description>This service describes a motorized window to be appeared in the Home.app showing a status and whether the windows are moving its position based on an injected payload.
Example Simple Window Contact Sensor The following simple setup is to demonstrate core characteristics and its representation in the Home.app:
These examples are meant to be copied into your Node-RED system and adapted to your setup.
[{&amp;quot;id&amp;quot;:&amp;quot;3d4e49d.f6615b6&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;debug&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;9507c98c.4f4f9&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;active&amp;quot;:true,&amp;quot;tosidebar&amp;quot;:true,&amp;quot;console&amp;quot;:false,&amp;quot;tostatus&amp;quot;:false,&amp;quot;complete&amp;quot;:&amp;quot;false&amp;quot;,&amp;quot;x&amp;quot;:930,&amp;quot;y&amp;quot;:480,&amp;quot;wires&amp;quot;:[]},{&amp;quot;id&amp;quot;:&amp;quot;c4ea5eb2.8ea768&amp;quot;,&amp;quot;type&amp;quot;:&amp;quot;homekit-service&amp;quot;,&amp;quot;z&amp;quot;:&amp;quot;9507c98c.4f4f9&amp;quot;,&amp;quot;isParent&amp;quot;:true,&amp;quot;bridge&amp;quot;:&amp;quot;90fc07e3.c93f68&amp;quot;,&amp;quot;parentService&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;name&amp;quot;:&amp;quot;Terrace Door&amp;quot;,&amp;quot;serviceName&amp;quot;:&amp;quot;Window&amp;quot;,&amp;quot;topic&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;filter&amp;quot;:false,&amp;quot;manufacturer&amp;quot;:&amp;quot;Default Manufacturer&amp;quot;,&amp;quot;model&amp;quot;:&amp;quot;Default Model&amp;quot;,&amp;quot;serialNo&amp;quot;:&amp;quot;Default Serial Number&amp;quot;,&amp;quot;characteristicProperties&amp;quot;:&amp;quot;{\n \&amp;quot;CurrentPosition\&amp;quot; :\n {\n \&amp;quot;minValue\&amp;quot;:0,\n \&amp;quot;maxValue\&amp;quot;:100\n },\n \&amp;quot;TargetPosition\&amp;quot; :\n {\n \&amp;quot;minValue\&amp;quot;:0,\n \&amp;quot;maxValue\&amp;quot;:100\n },\n \&amp;quot;PositionState\&amp;quot; :\n {\n \&amp;quot;validValues\&amp;quot;: [0,1,2]\n }\n}&amp;quot;,&amp;quot;x&amp;quot;:730,&amp;quot;y&amp;quot;:480,&amp;quot;wires&amp;quot;:[[&amp;quot;3d4e49d.</description></item></channel></rss>