<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>crxporter on</title><link>https://nrchkb.github.io/contributors/crxporter/</link><description>Recent content in crxporter on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 03 Aug 2021 23:21:00 +0000</lastBuildDate><atom:link href="https://nrchkb.github.io/contributors/crxporter/index.xml" rel="self" type="application/rss+xml"/><item><title>Demo Setup</title><link>https://nrchkb.github.io/wiki/examples/demo-setup/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/examples/demo-setup/</guid><description>Explanation The nature of this plugin and HomeKit in general is very complex. In the past we have tried screenshots, videos, and other ways to show how things work. With this new demo setup, we are taking it to a new level. You can simply copy the code and paste it right into your Node-RED setup to begin playing with many (eventually all) available HomeKit accessories.
Prerequisites You must have Node-RED and node-red-contrib-homekit-bridged (aka &amp;ldquo;our plugin&amp;rdquo;) installed on your system.</description></item><item><title>Quick Start</title><link>https://nrchkb.github.io/wiki/introduction/quick-start/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/introduction/quick-start/</guid><description>This wiki will be used to share examples so that users may see how this plugin functions and get started more easily with copyable flows for each HomeKit service. This page will assume you are familiar with Node-RED basics.
For new users, please start with the official Node-RED docs before continuing.
Nodes A Node is the basic building block of a flow. Nodes are triggered by either receiving a message from the previous node in a flow, or by waiting for some external event, such as change state of the light or some automated logic.</description></item><item><title>Output Messages</title><link>https://nrchkb.github.io/wiki/introduction/output-messages/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/introduction/output-messages/</guid><description>Starting with version 1.3.0, there are some changes in the hap part of the messages coming from this node.
Previous versions would have msg.hap.newValue and msg.hap.oldValue only if the message originated from the Home.app. Additionally there was a message part msg.hap.context with some information that nobody really knows what it means, but it was there.
From version 1.3.0 on, the parts of the message will always include msg.hap.newValue and msg.hap.oldValue. If the message originated from the Home.</description></item><item><title>Migration</title><link>https://nrchkb.github.io/wiki/discover-more/migration/</link><pubDate>Tue, 03 Aug 2021 23:21:00 +0000</pubDate><guid>https://nrchkb.github.io/wiki/discover-more/migration/</guid><description>Migration to new setup There are some cases when you may want to move your HomeKit devices to a new Node-RED instance while not changing your Home App pairings. This could be when you are migrating to a new computer, flashing a new SD card for your pi, or restoring from a backup. While not guaranteed, this process should allow migration without needing to remove your bridge or standalone devices from the Home app.</description></item><item><title>Characteristics</title><link>https://nrchkb.github.io/wiki/introduction/characteristics/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/introduction/characteristics/</guid><description>Characteristics are the values sent to the service item. They are generally true/false or number values. All services have at least one required characteristic. For example the switch has only the required characteristic of On.
Characteristic Properties The HomeKit service node has a section called &amp;ldquo;Characteristic Properties&amp;rdquo;. This section is used to define limits or initialize which characteristics you may send to your specific item.
The characteristic properties do not set any value in the item, instead they tell HomeKit that the item will be using that characteristic and define limits on the valid values.</description></item><item><title>Roadmap</title><link>https://nrchkb.github.io/wiki/discover-more/roadmap/</link><pubDate>Tue, 03 Aug 2021 21:21:00 +0100</pubDate><guid>https://nrchkb.github.io/wiki/discover-more/roadmap/</guid><description>Here is a list of some things that have been accomplished over the last year or so. Also, a few ideas that have been discussed. Please see the issues' area to discuss and make new requests.
Current efforts: Characteristics properties as GUI option in node configuration Add compatibility for custom characteristics (as requested) Explore possibility of 2-way audio for cameras (discussion here) Potential next developments: Add compatibility with Eve Energy (as requested) Add support to manage other homebridged accesories (made outside of the node-red?</description></item><item><title>Wait For Setup</title><link>https://nrchkb.github.io/wiki/introduction/wait-for-setup/</link><pubDate>Tue, 03 Aug 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/introduction/wait-for-setup/</guid><description>Wait For Setup feature allows to perform actual accessory configuration in bridge on incoming Setup Message.
Setup Message structure is:
{ &amp;#34;nrchkb&amp;#34;: { &amp;#34;setup&amp;#34;: { ... setup properties goes here } } } In the setup part you may specify properties to configure accessory, such as name, model, manufacturer and other properties available on homekit node.
To configure accessory characteristics setup should contain characteristicProperties string JSON representation for Characteristics Properties as seen in homekit node properties page.</description></item><item><title>Credits</title><link>https://nrchkb.github.io/wiki/discover-more/credits/</link><pubDate>Tue, 03 Aug 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/discover-more/credits/</guid><description>This is a place where would like to thank those who have come before to build the work that we have added to.
Where the Project came from The API work to interact between HomeKit and NodeJS is from HAP-NodeJS.
Marius Schmeding made the first version of the Node-RED plugin to use HAP-NodeJS. His work was later forked by Oliver Rahner who put in a good effort to move over to bridged connections to HomeKit.</description></item><item><title>Air Purifier</title><link>https://nrchkb.github.io/wiki/service/air-purifier/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/air-purifier/</guid><description>Possible combinations The display in the Home.app on iOS/macOS depends on the pair of values sent to the Characteristics Active and CurrentAirPurifierState. This table shows each of the 6 possible combinations of these two properties along with what the Home.app display will show. In order to have the Home.app display properly, it is important to send the correct pair of values to the HomeKit service node.
The node will output {&amp;quot;Active&amp;quot;:1} or {&amp;quot;Active&amp;quot;:0} when the user switches the purifier on and off.</description></item><item><title>Camera RTPStream Management</title><link>https://nrchkb.github.io/wiki/service/camera-rtpstream-management/</link><pubDate>Sat, 17 Apr 2021 18:50:12 +0000</pubDate><guid>https://nrchkb.github.io/wiki/service/camera-rtpstream-management/</guid><description>Notes on Cameras Cameras are a complicated situation. If you are running the Docker way then FFMPEG will be preinstalled for you with several of the options preset (may not have all hardware accelerations built). Alternately you can download and compile your own version of FFMPEG with the build flags you need for your cameras.
For those writing examples, please include how you have installed FFMPEG!
It is recommended to add only one camera per bridge.</description></item></channel></rss>