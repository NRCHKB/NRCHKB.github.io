<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tadeusz Wyrzykowski on</title><link>https://nrchkb.github.io/contributors/shaquu/</link><description>Recent content in Tadeusz Wyrzykowski on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 11 Apr 2021 22:00:00 +0200</lastBuildDate><atom:link href="https://nrchkb.github.io/contributors/shaquu/index.xml" rel="self" type="application/rss+xml"/><item><title>Demo Setup</title><link>https://nrchkb.github.io/wiki/examples/demo-setup/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/examples/demo-setup/</guid><description>Explanation The nature of this plugin and HomeKit in general is very complex. In the past we have tried screenshots, videos, and other ways to show how things work. With this new demo setup, we are taking it to a new level. You can simply copy the code and paste it right into your Node-RED setup to begin playing with many (eventually all) available HomeKit accessories.
Prerequisites You must have Node-RED and node-red-contrib-homekit-bridged (aka &amp;ldquo;our plugin&amp;rdquo;) installed on your system.</description></item><item><title>ESP</title><link>https://nrchkb.github.io/wiki/examples/esp/</link><pubDate>Wed, 10 Nov 2021 18:28:20 +0000</pubDate><guid>https://nrchkb.github.io/wiki/examples/esp/</guid><description>What is an ESP? ESP is a microcontroller integrated circuit with Wi-Fi connection and very inexpensive. There are several versions of ESP, including ESP32, which is the latest version. ESP32 is more powerful and integrates Bluetooth connection. A popular option is Itead Sonoff modules which integrate an ESP, but the original firmware is not fully &amp;ldquo;open&amp;rdquo; so it cannot be easily added to systems like Node-RED. To solve this problem, ESP Easy or Tasmota firmware can be used to transform the ESP module into a simple multi-function sensor device for home automation solutions.</description></item><item><title>Contribution</title><link>https://nrchkb.github.io/wiki/discover-more/contribution/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/discover-more/contribution/</guid><description>Editing Open desired page For example https://nrchkb.github.io/wiki/service/lock-mechanism/ Click Edit this page on GitHub
on the bottom of the page You will be directed to the raw page file in our GitHub repository In GitHub editor, add or edit content after last --- For content, you can use markdown (preferred) or html Create new branch for commit and create Pull Request Our Moderators will respond shortly!</description></item><item><title>Quick Start</title><link>https://nrchkb.github.io/wiki/introduction/quick-start/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/introduction/quick-start/</guid><description>This wiki will be used to share examples so that users may see how this plugin functions and get started more easily with copyable flows for each HomeKit service. This page will assume you are familiar with Node-RED basics.
For new users, please start with the official Node-RED docs before continuing.
Nodes A Node is the basic building block of a flow. Nodes are triggered by either receiving a message from the previous node in a flow, or by waiting for some external event, such as change state of the light or some automated logic.</description></item><item><title>Service Node</title><link>https://nrchkb.github.io/wiki/nodes/service-node/</link><pubDate>Thu, 06 May 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/nodes/service-node/</guid><description>This node represents Service in HomeKit. When hosted behind the Bridge it will also represent Accessory.
Configuration Below you can find the list of configurable parameters for Service Node (this Node can also be found as a homekit node or homekit-service).
Service Hierarchy Choose if this node will represent Parent (or Primary) Service or Linked one.
Option Description Parent Node will be used as Primary Service.</description></item><item><title>Status Node</title><link>https://nrchkb.github.io/wiki/nodes/status-node/</link><pubDate>Thu, 30 Sep 2021 18:51:41 +0000</pubDate><guid>https://nrchkb.github.io/wiki/nodes/status-node/</guid><description>This node outputs status of the HomeKit Service.
Configuration Below you can find the list of configurable parameters for Service Node (this Node can also be found as a homekit node or homekit-service).
Service Node Select Service node from the list of already configured nodes which will be used in this node to return status.
Input There is no input payload required. Input port is just used to trigger status output.</description></item><item><title>Washing Machine Monitor</title><link>https://nrchkb.github.io/wiki/examples/washing-machine-monitor/</link><pubDate>Tue, 03 Aug 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/examples/washing-machine-monitor/</guid><description>This is a Washing Machine in use flow I created to monitor the usage of our washing machine, and provide notification to the Home.app of the wash status. To create this I leveraged an ESP8266 based current sensor WemosEM to monitor usage of the Washing Machine. And used the flow to determine if the Washing machine was in use, then trigger a Contact sensor.
The flow watches the watts used, averaging the previous 24 readings, and if they cross 30 watts, trigger the On state, and if the average drops below 15 watts trigger the off state.</description></item><item><title>Output Messages</title><link>https://nrchkb.github.io/wiki/introduction/output-messages/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/introduction/output-messages/</guid><description>Starting with version 1.3.0, there are some changes in the hap part of the messages coming from this node.
Previous versions would have msg.hap.newValue and msg.hap.oldValue only if the message originated from the Home.app. Additionally there was a message part msg.hap.context with some information that nobody really knows what it means, but it was there.
From version 1.3.0 on, the parts of the message will always include msg.hap.newValue and msg.hap.oldValue. If the message originated from the Home.</description></item><item><title>Migration</title><link>https://nrchkb.github.io/wiki/discover-more/migration/</link><pubDate>Tue, 03 Aug 2021 23:21:00 +0000</pubDate><guid>https://nrchkb.github.io/wiki/discover-more/migration/</guid><description>Migration to new setup There are some cases when you may want to move your HomeKit devices to a new Node-RED instance while not changing your Home App pairings. This could be when you are migrating to a new computer, flashing a new SD card for your pi, or restoring from a backup. While not guaranteed, this process should allow migration without needing to remove your bridge or standalone devices from the Home app.</description></item><item><title>Characteristics</title><link>https://nrchkb.github.io/wiki/introduction/characteristics/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/introduction/characteristics/</guid><description>Characteristics are the values sent to the service item. They are generally true/false or number values. All services have at least one required characteristic. For example the switch has only the required characteristic of On.
Characteristic Properties The HomeKit service node has a section called &amp;ldquo;Characteristic Properties&amp;rdquo;. This section is used to define limits or initialize which characteristics you may send to your specific item.
The characteristic properties do not set any value in the item, instead they tell HomeKit that the item will be using that characteristic and define limits on the valid values.</description></item></channel></rss>