<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nodes on</title><link>https://nrchkb.github.io/wiki/nodes/</link><description>Recent content in Nodes on</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 30 Sep 2021 18:27:28 +0000</lastBuildDate><atom:link href="https://nrchkb.github.io/wiki/nodes/index.xml" rel="self" type="application/rss+xml"/><item><title>Service Node</title><link>https://nrchkb.github.io/wiki/nodes/service-node/</link><pubDate>Thu, 06 May 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/nodes/service-node/</guid><description>A Service or Service group (Parent and Linked) is considered like Accessory. You can choose to either link your Accessory to a Bridge or use your Standalone Accessory. The difference is when adding in Home.app: In the case of the Bridge, adding the Bridge adds all Accessory linked to that Bridge and in the case of the Standalone Accessory, you only add itself.
Configuration You will find below a table showing all the parameters and when they are used, as well as the list of parameters and their usefulness.</description></item><item><title>Host Node</title><link>https://nrchkb.github.io/wiki/nodes/host-node/</link><pubDate>Thu, 06 May 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/nodes/host-node/</guid><description>It can be configured in two ways:
Option Description Bridge When you add a Bridge in the Home.app, it will add all services related to this Bridge. Accessory Here, the Bridge being the Accessory itself, you can define the type of service it is, and when you add it to the Home.app it will show you your Accessory with a logo. ‚ö†Ô∏è Important Notice, when you create a new Bridge for Service Node that is in a subflow, once deployed new Bridge will be created for each subflow instance in a flow.</description></item><item><title>Status Node</title><link>https://nrchkb.github.io/wiki/nodes/status-node/</link><pubDate>Thu, 30 Sep 2021 18:51:41 +0000</pubDate><guid>https://nrchkb.github.io/wiki/nodes/status-node/</guid><description>This node outputs status of the HomeKit Service.
Configuration Below you can find the list of configurable parameters for Service Node (this Node can also be found as a homekit node or homekit-service).
Service Node Select Service node from the list of already configured nodes which will be used in this node to return status.
Input There is no input payload required. Input port is just used to trigger status output.</description></item><item><title>Linked Service</title><link>https://nrchkb.github.io/wiki/nodes/linked-service/</link><pubDate>Fri, 21 Jan 2022 14:54:56 +0000</pubDate><guid>https://nrchkb.github.io/wiki/nodes/linked-service/</guid><description>How to create a Linked Service To create a Linked Service, you must first create a Parent Service. For this example, the Linked Service will be a Battery and the Parent Service a Motion Sensor.
Next, you must create Linked Service and select Parent Service used.
Characteristic Properties Use the following JSON in your Battery Characteristic Properties so that the Home.app displays BatteryLevel and StatusLowBattery.
{ &amp;#34;BatteryLevel&amp;#34;: 100, &amp;#34;StatusLowBattery&amp;#34;: 0 } Another way Another method is to use Characteristic Properties.</description></item><item><title>Characteristic Properties</title><link>https://nrchkb.github.io/wiki/nodes/characteristics/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/nodes/characteristics/</guid><description>What is that A Service node is made up of one or more characteristics. The Characteristic Properties tell the Home.app to adapt its display to the chosen settings. It also allows you to define default values and usage limitations.
üí° The Characteristics available for each service are displayed on each page of the Service section and information about each characteristic in the Characteristic section. How to use it Go to the section called Characteristic Properties of your HomeKit Service Node.</description></item><item><title>Topic</title><link>https://nrchkb.github.io/wiki/nodes/topic/</link><pubDate>Sat, 22 Jan 2022 18:59:43 +0000</pubDate><guid>https://nrchkb.github.io/wiki/nodes/topic/</guid><description>What is that The Topic serves two purposes:
at the entrance to the HomeKit node, it allows messages to be filtered. at the exit of the HomeKit node, it identifies where the message came from. When to use it We use the Filter on Topic option when you want to redirect your messages to the correct service without using function node or switch node.
Below is an example of a flow structure without Topic and another with.</description></item><item><title>Output Messages</title><link>https://nrchkb.github.io/wiki/nodes/output-messages/</link><pubDate>Thu, 01 Apr 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/nodes/output-messages/</guid><description>Differentiate between passthrough or &amp;ldquo;from HomeKit&amp;rdquo; messages In some cases, it may be useful, even essential, to differentiate a command from the previous node or Home.app to avoid a loop problem. There are two possible cases:
Disable messages passthrough The first solution is to disable passthrough messages, which will cause your HomeKit node to no longer send messages from your previous nodes. If you need to keep passthrough messages, used the second solution.</description></item><item><title>Wait For Setup</title><link>https://nrchkb.github.io/wiki/nodes/wait-for-setup/</link><pubDate>Tue, 03 Aug 2021 00:00:00 +0200</pubDate><guid>https://nrchkb.github.io/wiki/nodes/wait-for-setup/</guid><description>What is that Wait For Setup feature allows dynamic configuration of the Characteristic Properties of a Service Node before its initialization. In other words, it allows you to configure your Characteristic Properties with values from external sources.
‚ö†Ô∏è Service Node will remain in initialization (will not appear in Home.app) until it has received its configuration message. Once this message has been sent, it cannot be changed unless you redeploy your flow.</description></item></channel></rss>